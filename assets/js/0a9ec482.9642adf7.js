"use strict";(self.webpackChunkdocs_v_2=self.webpackChunkdocs_v_2||[]).push([[8135],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return d}});var i=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,i,r=function(e,n){if(null==e)return{};var t,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var u=i.createContext({}),s=function(e){var n=i.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},c=function(e){var n=s(e.components);return i.createElement(u.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},f=i.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,u=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),f=s(t),d=r,m=f["".concat(u,".").concat(d)]||f[d]||p[d]||o;return t?i.createElement(m,a(a({ref:n},c),{},{components:t})):i.createElement(m,a({ref:n},c))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,a=new Array(o);a[0]=f;var l={};for(var u in n)hasOwnProperty.call(n,u)&&(l[u]=n[u]);l.originalType=e,l.mdxType="string"==typeof e?e:r,a[1]=l;for(var s=2;s<o;s++)a[s]=t[s];return i.createElement.apply(null,a)}return i.createElement.apply(null,t)}f.displayName="MDXCreateElement"},6934:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return l},contentTitle:function(){return u},metadata:function(){return s},toc:function(){return c},default:function(){return f}});var i=t(7462),r=t(3366),o=(t(7294),t(3905)),a=["components"],l={},u="Configuration Files",s={unversionedId:"basics/Configuration-Files",id:"basics/Configuration-Files",isDocsHomePage:!1,title:"Configuration Files",description:"Values in spock are set using external configuration files.",source:"@site/docs/basics/Configuration-Files.md",sourceDirName:"basics",slug:"/basics/Configuration-Files",permalink:"/spock/basics/Configuration-Files",editUrl:"https://github.com/fidelity/spock/edit/master/website/docs/basics/Configuration-Files.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Build",permalink:"/spock/basics/Building"},next:{title:"Saving",permalink:"/spock/basics/Saving"}},c=[{value:"Supported Configuration Formats",id:"supported-configuration-formats",children:[]},{value:"Creating a Configuration File",id:"creating-a-configuration-file",children:[]}],p={toc:c};function f(e){var n=e.components,t=(0,r.Z)(e,a);return(0,o.kt)("wrapper",(0,i.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"configuration-files"},"Configuration Files"),(0,o.kt)("p",null,"Values in ",(0,o.kt)("inlineCode",{parentName:"p"},"spock")," are set using external configuration files."),(0,o.kt)("h3",{id:"supported-configuration-formats"},"Supported Configuration Formats"),(0,o.kt)("h4",{id:"yaml"},"YAML"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Requires file extension of ",(0,o.kt)("inlineCode",{parentName:"li"},".yaml"),"."),(0,o.kt)("li",{parentName:"ul"},"Supported using the external ",(0,o.kt)("inlineCode",{parentName:"li"},"PyYAML")," library. ")),(0,o.kt)("h4",{id:"toml"},"TOML"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Requires file extension of ",(0,o.kt)("inlineCode",{parentName:"li"},".toml"),"."),(0,o.kt)("li",{parentName:"ul"},"Supported using the external ",(0,o.kt)("inlineCode",{parentName:"li"},"toml")," library.")),(0,o.kt)("h4",{id:"json"},"JSON"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Requires file extension of ",(0,o.kt)("inlineCode",{parentName:"li"},".json"),"."),(0,o.kt)("li",{parentName:"ul"},"Supported using the built-in ",(0,o.kt)("inlineCode",{parentName:"li"},"json")," module.")),(0,o.kt)("h3",{id:"creating-a-configuration-file"},"Creating a Configuration File"),(0,o.kt)("p",null,"Recall that we defined our ",(0,o.kt)("inlineCode",{parentName:"p"},"spock")," class as such:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"class Activation(Enum):\n    relu = 'relu'\n    gelu = 'gelu'\n    tanh = 'tanh'\n\n\n@spock\nclass ModelConfig:\n    n_features: int\n    dropout: List[float]\n    hidden_sizes: Tuple[int, int, int]\n    activation: Activation\n")),(0,o.kt)("p",null,"Note that all of the types of our parameters ",(0,o.kt)("inlineCode",{parentName:"p"},"int"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"List"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"Tuple"),", and ",(0,o.kt)("inlineCode",{parentName:"p"},"Activation")," are required types. This\nmeans that if we do not specify values for these parameters in our configuration file ",(0,o.kt)("inlineCode",{parentName:"p"},"spock")," will throw an Exception. "),(0,o.kt)("p",null,"Let's create our configuration file using the YAML standard: ",(0,o.kt)("inlineCode",{parentName:"p"},"tutorial.yaml")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"################\n# tutorial.yaml\n################\n# ModelConfig\nn_features: 64\ndropout: [0.2, 0.1]\nhidden_sizes: [32, 32, 16]\nactivation: relu\n")))}f.isMDXComponent=!0}}]);