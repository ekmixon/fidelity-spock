"use strict";(self.webpackChunkdocs_v_2=self.webpackChunkdocs_v_2||[]).push([[4043],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return d}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),p=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),m=p(n),d=a,f=m["".concat(c,".").concat(d)]||m[d]||u[d]||o;return n?r.createElement(f,i(i({ref:t},s),{},{components:n})):r.createElement(f,i({ref:t},s))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5397:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return p},toc:function(){return s},default:function(){return m}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=["components"],l={sidebar_label:"config",title:"addons.tune.config"},c=void 0,p={unversionedId:"reference/addons/tune/config",id:"reference/addons/tune/config",isDocsHomePage:!1,title:"addons.tune.config",description:"Creates the spock config interface that wraps attr -- tune version for hyper-parameters",source:"@site/docs/reference/addons/tune/config.md",sourceDirName:"reference/addons/tune",slug:"/reference/addons/tune/config",permalink:"/spock/reference/addons/tune/config",editUrl:"https://github.com/fidelity/spock/edit/master/website/docs/reference/addons/tune/config.md",tags:[],version:"current",frontMatter:{sidebar_label:"config",title:"addons.tune.config"},sidebar:"api",previous:{title:"builder",permalink:"/spock/reference/addons/tune/builder"},next:{title:"interface",permalink:"/spock/reference/addons/tune/interface"}},s=[{value:"RangeHyperParameter Objects",id:"rangehyperparameter-objects",children:[]},{value:"ChoiceHyperParameter Objects",id:"choicehyperparameter-objects",children:[]}],u={toc:s};function m(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Creates the spock config interface that wraps attr -- tune version for hyper-parameters"),(0,o.kt)("h4",{id:"_spock_tune"},"_","spock","_","tune"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"def _spock_tune(cls)\n")),(0,o.kt)("p",null,"Ovverides basic spock_attr decorator with another name"),(0,o.kt)("p",null,"Using a different name allows spock to easily determine which parameters are normal and which are\nmeant to be used in a hyper-parameter tuning backend"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"cls")," - basic class def")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returns"),":"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"cls")," - slotted attrs class that is frozen and kw only")),(0,o.kt)("h2",{id:"rangehyperparameter-objects"},"RangeHyperParameter Objects"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"@attr.s\nclass RangeHyperParameter()\n")),(0,o.kt)("p",null,"Range based hyper-parameter that is sampled uniformly"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Attributes"),":"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"type")," - type of the hyper-parameter (note: spock will attempt to autocast into this type)"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"bounds")," - min and max of the hyper-parameter range"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"log_scale")," - log scale the values before sampling")),(0,o.kt)("h2",{id:"choicehyperparameter-objects"},"ChoiceHyperParameter Objects"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"@attr.s\nclass ChoiceHyperParameter()\n")),(0,o.kt)("p",null,"Choice based hyper-parameter that is sampled uniformly"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Attributes"),":"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"type")," - type of the hyper-parameter -- (note: spock will attempt to autocast into this type)"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"choices")," - list of variable length that contains all the possible choices to select from")))}m.isMDXComponent=!0}}]);