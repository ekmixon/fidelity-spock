"use strict";(self.webpackChunkdocs_v_2=self.webpackChunkdocs_v_2||[]).push([[1947],{3905:function(t,e,n){n.d(e,{Zo:function(){return p},kt:function(){return m}});var r=n(7294);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function i(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function o(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?i(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function u(t,e){if(null==t)return{};var n,r,a=function(t,e){if(null==t)return{};var n,r,a={},i=Object.keys(t);for(r=0;r<i.length;r++)n=i[r],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(r=0;r<i.length;r++)n=i[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var l=r.createContext({}),s=function(t){var e=r.useContext(l),n=e;return t&&(n="function"==typeof t?t(e):o(o({},e),t)),n},p=function(t){var e=s(t.components);return r.createElement(l.Provider,{value:e},t.children)},c={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},d=r.forwardRef((function(t,e){var n=t.components,a=t.mdxType,i=t.originalType,l=t.parentName,p=u(t,["components","mdxType","originalType","parentName"]),d=s(n),m=a,f=d["".concat(l,".").concat(m)]||d[m]||c[m]||i;return n?r.createElement(f,o(o({ref:e},p),{},{components:n})):r.createElement(f,o({ref:e},p))}));function m(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var i=n.length,o=new Array(i);o[0]=d;var u={};for(var l in e)hasOwnProperty.call(e,l)&&(u[l]=e[l]);u.originalType=t,u.mdxType="string"==typeof t?t:a,o[1]=u;for(var s=2;s<i;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9065:function(t,e,n){n.r(e),n.d(e,{frontMatter:function(){return u},contentTitle:function(){return l},metadata:function(){return s},toc:function(){return p},default:function(){return d}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),o=["components"],u={sidebar_label:"optuna",title:"addons.tune.optuna"},l=void 0,s={unversionedId:"reference/addons/tune/optuna",id:"reference/addons/tune/optuna",isDocsHomePage:!1,title:"addons.tune.optuna",description:"Handles the optuna backend",source:"@site/docs/reference/addons/tune/optuna.md",sourceDirName:"reference/addons/tune",slug:"/reference/addons/tune/optuna",permalink:"/spock/reference/addons/tune/optuna",editUrl:"https://github.com/fidelity/spock/edit/master/website/docs/reference/addons/tune/optuna.md",tags:[],version:"current",frontMatter:{sidebar_label:"optuna",title:"addons.tune.optuna"},sidebar:"api",previous:{title:"interface",permalink:"/spock/reference/addons/tune/interface"},next:{title:"payload",permalink:"/spock/reference/addons/tune/payload"}},p=[{value:"OptunaTunerStatus Objects",id:"optunatunerstatus-objects",children:[]},{value:"OptunaInterface Objects",id:"optunainterface-objects",children:[]}],c={toc:p};function d(t){var e=t.components,n=(0,a.Z)(t,o);return(0,i.kt)("wrapper",(0,r.Z)({},c,n,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Handles the optuna backend"),(0,i.kt)("h2",{id:"optunatunerstatus-objects"},"OptunaTunerStatus Objects"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"class OptunaTunerStatus(TypedDict)\n")),(0,i.kt)("p",null,"Tuner status return object for Optuna -- supports the define-and-run style interface from Optuna"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Attributes"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"trial")," - current ask trial sample"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"study")," - current optuna study object")),(0,i.kt)("h2",{id:"optunainterface-objects"},"OptunaInterface Objects"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"class OptunaInterface(BaseInterface)\n")),(0,i.kt)("p",null,"Specific override to support the optuna backend -- supports the define-and-run style interface from Optuna"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Attributes"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"_map_type")," - dictionary that maps class names and types to fns that create optuna distributions"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"_trial")," - current trial object from the optuna backend"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"_tuner_obj")," - underlying optuna study object"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"_tuner_namespace")," - tuner namespace that has attr classes that maps to an underlying library types"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"_param_obj")," - underlying object that optuna study can sample from (flat dictionary)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"_sample_hash")," - hash of the most recent sample draw")),(0,i.kt)("h4",{id:"__init__"},"_","_","init","_","_"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"def __init__(tuner_config: OptunaTunerConfig, tuner_namespace)\n")),(0,i.kt)("p",null,"OptunaInterface init call that maps variables, creates a map to fnc calls, and constructs the necessary\nunderlying objects"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"tuner_config")," - configuration object for the optuna backend"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"tuner_namespace")," - tuner namespace that has attr classes that maps to an underlying library types")),(0,i.kt)("h4",{id:"_uniform_float_dist"},"_","uniform","_","float","_","dist"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"def _uniform_float_dist(val)\n")),(0,i.kt)("p",null,"Assemble the optuna.distributions.(Log)UniformDistribution object"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://optuna.readthedocs.io/en/stable/reference/generated/optuna.distributions.UniformDistribution.html"},"https://optuna.readthedocs.io/en/stable/reference/generated/optuna.distributions.UniformDistribution.html"),"\n",(0,i.kt)("a",{parentName:"p",href:"https://optuna.readthedocs.io/en/stable/reference/generated/optuna.distributions.LogUniformDistribution.html"},"https://optuna.readthedocs.io/en/stable/reference/generated/optuna.distributions.LogUniformDistribution.html")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"val")," - current attr val")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns"),":"),(0,i.kt)("p",null,"  optuna.distributions.UniformDistribution or optuna.distributions.LogUniformDistribution"),(0,i.kt)("h4",{id:"_uniform_int_dist"},"_","uniform","_","int","_","dist"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"def _uniform_int_dist(val)\n")),(0,i.kt)("p",null,"Assemble the optuna.distributions.Int(Log)UniformDistribution object"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://optuna.readthedocs.io/en/stable/reference/generated/optuna.distributions.IntUniformDistribution.html"},"https://optuna.readthedocs.io/en/stable/reference/generated/optuna.distributions.IntUniformDistribution.html"),"\n",(0,i.kt)("a",{parentName:"p",href:"https://optuna.readthedocs.io/en/stable/reference/generated/optuna.distributions.IntLogUniformDistribution.html"},"https://optuna.readthedocs.io/en/stable/reference/generated/optuna.distributions.IntLogUniformDistribution.html")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"val")," - current attr val")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns"),":"),(0,i.kt)("p",null,"  optuna.distributions.IntUniformDistribution or optuna.distributions.IntLogUniformDistribution"),(0,i.kt)("h4",{id:"_categorical_dist"},"_","categorical","_","dist"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"def _categorical_dist(val)\n")),(0,i.kt)("p",null,"Assemble the optuna.distributions.CategoricalDistribution object"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://optuna.readthedocs.io/en/stable/reference/generated/optuna.distributions.CategoricalDistribution.html"},"https://optuna.readthedocs.io/en/stable/reference/generated/optuna.distributions.CategoricalDistribution.html")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"val")," - current attr val")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns"),":"),(0,i.kt)("p",null,"  optuna.distributions.CategoricalDistribution"))}d.isMDXComponent=!0}}]);